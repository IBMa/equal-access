# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release publish

on:
  release:
    types: 
      - published

jobs:
###############################################################################
# NPM Node
####
  accessibility-checker-engine-publish:
      runs-on: ubuntu-20.04

      strategy:
        matrix:
          node-version: [18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm run build:all
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist
      - run: npm install
        working-directory: accessibility-checker
      - run: npm run build
        working-directory: accessibility-checker
      - run: npm test
        working-directory: accessibility-checker/test-act
      - run: npm test
        working-directory: accessibility-checker/test-act-w3
      - run: gitactions/publish/achecker-engine.sh
        env: 
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  accessibility-checker-publish:
      runs-on: ubuntu-20.04

      strategy:
        matrix:
          node-version: [18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: accessibility-checker
      - run: npm install
        working-directory: report-react
      - run: npm run build
        working-directory: accessibility-checker
      - run: gitactions/publish/achecker.sh
        env: 
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  karma-accessibility-checker-publish:
      runs-on: ubuntu-20.04

      strategy:
        matrix:
          node-version: [18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: karma-accessibility-checker
      - run: npm run build
        working-directory: karma-accessibility-checker
      - run: gitactions/publish/karma-achecker.sh
        env: 
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  cypress-accessibility-checker-publish:
      runs-on: ubuntu-20.04

      strategy:
        matrix:
          node-version: [18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: cypress-accessibility-checker
      - run: npm run build:report
        working-directory: cypress-accessibility-checker
      - run: npm run package:npm
        working-directory: cypress-accessibility-checker
      - run: gitactions/publish/cypress-achecker.sh
        env: 
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  extension-build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
      working-directory: report-react
    - run: npm install
      working-directory: accessibility-checker-extension
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: sed -i'.old' -e "s/[\"|']use strict[\"|']//g" ./exceljs.js
      working-directory: accessibility-checker-extension/node_modules/exceljs/dist
    - run: sed -i'.old' -e "s/[\"|']use strict[\"|']//g" ./exceljs.min.js
      working-directory: accessibility-checker-extension/node_modules/exceljs/dist
    - run: cp -f ./manifest_Chrome.json ./src/manifest.json
      working-directory: accessibility-checker-extension
    - run: |
        if [ -n "${GITHUB_REF:10}" ]; then
          NPM_VERSION="${GITHUB_REF:10}";
          if [[ "${GITHUB_REF}" =~ "-rc" ]]; then
            EXT_VERSION="${NPM_VERSION/-rc/}"
          else
            EXT_VERSION="${NPM_VERSION}.9999"
          fi;
          sed -i'.old' -e 's/"version": "3.0.0",/"version": "'"${EXT_VERSION}"'",/g' ./manifest.json
        fi;
      working-directory: accessibility-checker-extension/src
    - run: rm manifest.json.old
      working-directory: accessibility-checker-extension/src
    - run: npm run package:browser
      working-directory: accessibility-checker-extension
    - name: Upload packed extension
      uses: actions/upload-artifact@v1
      with:
        name: accessibility-checker-extension for Chrome
        path: accessibility-checker-extension/package/accessibility-checker-extension.zip
    - run: cp -f ./manifest_Firefox.json ./src/manifest.json
      working-directory: accessibility-checker-extension
    - run: |
        if [ -n "${GITHUB_REF:10}" ]; then
          NPM_VERSION="${GITHUB_REF:10}";
          if [[ "${GITHUB_REF}" =~ "-rc" ]]; then
            EXT_VERSION="${NPM_VERSION/-rc/}"
          else
            EXT_VERSION="${NPM_VERSION}.9999"
          fi;
          sed -i'.old' -e 's/"version": "3.0.0",/"version": "'"${EXT_VERSION}"'",/g' ./manifest.json
        fi;
      working-directory: accessibility-checker-extension/src
    - run: rm manifest.json.old
      working-directory: accessibility-checker-extension/src
    - run: npm run package:browser
      working-directory: accessibility-checker-extension
    - name: Upload packed extension
      uses: actions/upload-artifact@v1
      with:
        name: accessibility-checker-extension for Firefox
        path: accessibility-checker-extension/package/accessibility-checker-extension.zip

  rule-deploy:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: gitactions/publish/rules.sh
      env: 
        BLUEMIX_USERID: apikey
        BLUEMIX_PASS: ${{ secrets.BLUEMIX_PASS }}
        CLOUD_PWD: ${{ secrets.CLOUD_PWD }}
        TRAVIS_BRANCH: prod