/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    // id 'signing'
}

group 'com.ibm.able.equalaccess'
version '1.0.0-beta-3'
archivesBaseName = 'accessibility-checker'

sourceSets {
    selenium {
        java {
            srcDir 'src/main/java'
        }
    }
    main {
        java {
            srcDir 'src/main/java'
            exclude '**/enginecontext/selenium/**'
        }
    }
    test {
        java {
            srcDir 'src/main/java'
        }
    }
}

java {
    registerFeature('selenium') {
        usingSourceSet(sourceSets.selenium)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.11.0'
    // https://mavenlibs.com/maven/dependency/org.mozilla/rhino
    implementation 'org.mozilla:rhino:1.7.14'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    seleniumImplementation 'org.seleniumhq.selenium:selenium-java:4.23.0'
    seleniumImplementation 'com.google.code.gson:gson:2.11.0'
    // https://mavenlibs.com/maven/dependency/org.mozilla/rhino
    seleniumImplementation 'org.mozilla:rhino:1.7.14'

    // Use JUnit test framework.
    testImplementation libs.junit
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.23.0'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    // implementation libs.guava


    // implementation 'org.seleniumhq.selenium:selenium-java:4.23.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    testLogging {
        showStandardStreams = true
        showStackTraces = true
    }
}

jar {
    // manifest {
    //     attributes "Main-Class": "com.baeldung.fatjar.Application"
    // }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE 
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/IBMa/equal-access")
            credentials {
                username = project.findProperty("githubJava.user") ?: System.getenv("USERNAME")
                password = project.findProperty("githubJava.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        githubJava(MavenPublication) {
            from components.java
            artifactId = 'accessibility-checker'

            pom {
                name = 'accessibility-checker'
                description = 'A module that allows you to perform integrated accessibility testing for environments such as JUnit and Selenium'
                url = 'https://www.ibm.com/able/toolkit/tools/'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/IBMa/equal-access.git'
                    developerConnection = 'scm:git:ssh://github.com/IBMa/equal-access.git'
                    url = 'https://github.com/IBMa/equal-access'
                }
            }
        }
    }
}

// signing {
//     sign publishing.publications.githubJava
// }